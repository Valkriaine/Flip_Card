<Page
    x:Name="cardpage"
    x:Class="FlipBear.CardPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:FlipBear.Classes"
    xmlns:media="using:Windows.UI.Xaml.Media"
    xmlns:UI="using:Microsoft.Advertising.WinRT.UI"
    mc:Ignorable="d"
    Background="{StaticResource SystemControlAcrylicWindowBrush}"
    RequestedTheme="Dark"
    NavigationCacheMode="Required"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations">


    <Page.Resources>
        <media:AcrylicBrush x:Key="Cover" BackgroundSource="Backdrop"
            TintOpacity="0" TintColor="Black" TintLuminosityOpacity="0.5" FallbackColor="Black" />
        <Style TargetType="TextBox" x:Key="FlatTextBox">
            <Setter Property="Background" Value="{ThemeResource TextControlBackground}"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}"/>
            <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}"/>
            <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal">
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"                                           Storyboard.TargetProperty="Foreground">                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{TemplateBinding Foreground}" />                                            </ObjectAnimationUsingKeyFrames>                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" FontWeight="Normal" Foreground="{TemplateBinding Foreground}" Margin="{ThemeResource RichEditBoxTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <Border x:Name="BorderElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" MinHeight="{ThemeResource TextControlThemeMinHeight}" MinWidth="{ThemeResource TextControlThemeMinWidth}" Grid.RowSpan="1" Grid.Row="1"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" ZoomMode="Disabled" Foreground="Black"/>
                            <ContentPresenter x:Name="DescriptionPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Foreground="{TemplateBinding Foreground}" Grid.Row="2" x:Load="False"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>


   <Grid x:Name="rootgrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Height="auto" Orientation="Horizontal" Grid.Row="0" Background= "{StaticResource NavigationViewDefaultPaneBackground}">
            <Button Style="{StaticResource NavigationBackButtonNormalStyle}" HorizontalAlignment="Left" Click="Button_Click" VerticalAlignment="Top" Margin="0,40,0,0"/>
            <Image x:Name="DeckImage" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,40,30,40" Height="180" Tapped="DeckImage_Tapped">
                <animations:Implicit.ShowAnimations>
                    <animations:TranslationAnimation Duration="0:0:0.5" To="0, 0, 0"></animations:TranslationAnimation>
                    <animations:OpacityAnimation Duration="0:0:0.5" To="1.0"></animations:OpacityAnimation>
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:ScalarAnimation Target="Opacity" Duration="0:0:0.5" To="0.0"></animations:ScalarAnimation>
                    <animations:ScalarAnimation Target="Translation.Y" Duration="0:0:0.5" To="-200">
                        <animations:ScalarKeyFrame Key="0.1" Value="30"></animations:ScalarKeyFrame>
                        <animations:ScalarKeyFrame Key="0.3" Value="0.0"></animations:ScalarKeyFrame>
                    </animations:ScalarAnimation>
                </animations:Implicit.HideAnimations>
            </Image>
            <StackPanel x:Name="HeaderPanel" Orientation="Vertical"  Margin="0,40,0,0" Visibility="Visible">
                <animations:Implicit.ShowAnimations>
                    <animations:TranslationAnimation Duration="0:0:0.5" To="0, 0, 0"></animations:TranslationAnimation>
                    <animations:OpacityAnimation Duration="0:0:0.5" To="1.0"></animations:OpacityAnimation>
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:ScalarAnimation Target="Opacity" Duration="0:0:0.5" To="0.0"></animations:ScalarAnimation>
                </animations:Implicit.HideAnimations>
                <TextBlock x:Name="DeckName" FontSize="30" Margin="0,0,0,10" TextAlignment="Left"/>
                <DropDownButton Content="Mark As" FontSize="12" Margin="-10,0,0,10" Background="Transparent">
                    <DropDownButton.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <ToggleMenuFlyoutItem x:Name="MasterToggle" Text="Mastered"  Click="Master_Click" />
                            <ToggleMenuFlyoutItem x:Name="MarkToggle" Text="Book Marked"  Click="Mark_Click" />
                        </MenuFlyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
                <ToggleSwitch HorizontalAlignment="Left" x:Name="fronttoggleswitch" Loaded="fronttoggle_Loaded" Header="Show side" OnContent="Front" OffContent="Back" Background="Transparent"/>
                <CommandBar x:Name="EditeBar" Background="Transparent" IsOpen="False" DefaultLabelPosition="Right" Grid.Row="0" HorizontalAlignment="Left"
                            Margin="-10,5,0,10">
                    <AppBarButton Icon="Add" Label="Add Card" Click="Add_Click" />
                    <AppBarToggleButton x:Name="editeMode" Icon="Edit" Label="Edit" Click="editeMode_Click" />
                    <AppBarButton x:Name="playbutton" Icon="Play" Label="Practice View">
                        <AppBarButton.Flyout>
                            <Flyout>
                                <CommandBar IsOpen="False" DefaultLabelPosition="Right">
                                    <AppBarToggleButton x:Name="playtoggle" Icon="Undo" Label="Show back first" IsChecked="False" Click="showbackfronttoggle_Click"/>
                                    <AppBarButton Icon="Sort" Label="In order" Click="play"/>
                                    <AppBarButton Icon="Shuffle" Label="Shuffled" Click="shuffleplay"/>
                                </CommandBar>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                </CommandBar>
            </StackPanel>
            <CommandBar x:Name="HeaderBar" Background="Transparent" IsOpen="False" DefaultLabelPosition="Right" Grid.Row="0" HorizontalAlignment="Left"
                            Margin="48,40,0,0" Visibility="Collapsed">
                <animations:Implicit.ShowAnimations>
                    <animations:TranslationAnimation Duration="0:0:0.5" To="0, 0, 0"></animations:TranslationAnimation>
                    <animations:OpacityAnimation Duration="0:0:0.5" To="1.0"></animations:OpacityAnimation>
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:ScalarAnimation Target="Opacity" Duration="0:0:0.5" To="0.0"></animations:ScalarAnimation>
                    <animations:ScalarAnimation Target="Translation.Y" Duration="0:0:0.5" To="-200">
                        <animations:ScalarKeyFrame Key="0.1" Value="30"></animations:ScalarKeyFrame>
                        <animations:ScalarKeyFrame Key="0.3" Value="0.0"></animations:ScalarKeyFrame>
                    </animations:ScalarAnimation>
                </animations:Implicit.HideAnimations>
                <AppBarButton Icon="Add" Label="Add Card" Click="Add_Click" />
                <AppBarToggleButton x:Name="togleb" Content="Showing Front" Click="togglebackfront" Loaded="AppBarToggleButton_Loaded"/>
                <AppBarToggleButton x:Name="editeMode2" Icon="Edit" Label="Edit" Click="editeMode2_Click" />
                <AppBarButton x:Name="playbutton2" Icon="Play" Label="Practice View">
                    <AppBarButton.Flyout>
                        <Flyout>
                            <CommandBar IsOpen="False" DefaultLabelPosition="Right">
                                <AppBarToggleButton x:Name="playtoggle2" Icon="Undo" Label="Show back first" IsChecked="False" Click="showbackfronttoggle_Click"/>
                                <AppBarButton Icon="Sort" Label="In order" Click="play"/>
                                <AppBarButton Icon="Shuffle" Label="Shuffled" Click="shuffleplay"/>
                            </CommandBar>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar>
            <UI:AdControl ApplicationId="3f83fe91-d6be-434d-a0ae-7351c5a997f1"
              AdUnitId="test"
              HorizontalAlignment="Stretch"
              Height="100"
              VerticalAlignment="Center"
                          Width="500"
              Margin="20,0,0,0"
              />
        </StackPanel>
        <Frame x:Name="DetailFrame" Grid.Row="1"/>
        <Grid Grid.Row="0" Grid.RowSpan="2" x:Name="PlayGrid" Background="{StaticResource Cover}" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="6*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.2*"/>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
           
            <Canvas Width="80" Height="80" Margin="10" x:Name="ExitPlayButton" HorizontalAlignment="Right" Tapped="ExitPlay" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="0">
                <Rectangle Width="80" Height="80" Fill="Transparent" PointerEntered="ExitPlayButton_PointerEntered" PointerExited="ExitPlayButton_PointerExited"/>
                <Line
                    x:Name="line1"
                    X1="20" Y1="20"
                    X2="60" Y2="60"
                    Stroke="White"
                    StrokeThickness="1">
                </Line>
                <Line
                    x:Name="line2"
                    X1="20" Y1="60"
                    X2="60" Y2="20"
                    Stroke="White"
                    StrokeThickness="1">
                </Line>
            </Canvas>
            <GridView x:Name="PlayList" Grid.Column="1" Grid.Row="1" SizeChanged="Grid_SizeChanged" Grid.RowSpan="2" SelectionMode="None" VerticalAlignment="Stretch" HorizontalAlignment="Center">
                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    </Style>
                </GridView.ItemContainerStyle>
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid MaximumRowsOrColumns="1" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>
                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="data:Card">
                        <Grid MaxWidth="600" MaxHeight="450"  Margin="15">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Tapped="Grid_Tapped">
                                <Grid.Resources>
                                    <Storyboard x:Name="flipfront">
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="bgrid" From="-90" To="0" Duration="0:0:0.25">
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="fgrid" From="0" To="90" Duration="0:0:0.25">
                                        </DoubleAnimation>
                                    </Storyboard>
                                    <Storyboard x:Name="flipback">
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="bgrid" From="0" To="-90" Duration="0:0:0.25">
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="fgrid" From="90" To="0" Duration="0:0:0.25">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </Grid.Resources>
                                <Grid x:Name="fgrid" Background="{x:Bind ColorString}" Visibility="Visible" Loaded="fgrid_Loaded">
                                    <Grid.Projection>
                                        <PlaneProjection CenterOfRotationY="0.5"/>
                                    </Grid.Projection>
                                    <Grid.RenderTransform>
                                        <CompositeTransform />
                                    </Grid.RenderTransform>
                                    <Image Source="{x:Bind Front}"/>
                                    <TextBox Text="{x:Bind FrontText}" Style="{StaticResource FlatTextBox}" FontSize="{x:Bind FrontFontSize}" Foreground="Black" IsColorFontEnabled="True" Background="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="20,20,5,5" IsHitTestVisible="False"/>
                                </Grid>
                                <Grid x:Name="bgrid" Background="{x:Bind ColorString}" Visibility="Collapsed" Loaded="bgrid_Loaded">
                                    <Grid.Projection>
                                        <PlaneProjection CenterOfRotationY="0.5"/>
                                    </Grid.Projection>
                                    <Grid.RenderTransform>
                                        <CompositeTransform />
                                    </Grid.RenderTransform>
                                    <Image Source="{x:Bind Back}"/>
                                    <TextBox Text="{x:Bind BackText}" Style="{StaticResource FlatTextBox}" FontSize="{x:Bind BackFontSize}" Foreground="Black" Background="Transparent" IsColorFontEnabled="True" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="20,20,5,5" IsHitTestVisible="False"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>
        </Grid>
    </Grid>
</Page>
